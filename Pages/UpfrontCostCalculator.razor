@page "/upfrontcostcalculator"

@using BFGBlazor.Data
@using Radzen

<div class="jumbotron" id="banner1" style="background: rgb(44,44,44);">
    <div class="row">
        <div class="col">
            <h1 style="color: rgb(255,255,255);">Upfront Cost Calculator</h1>
            <p style="color: rgb(255,255,255);">Nullam id dolor id nibh ultricies vehicula ut id elit. Cras justo odio, dapibus ac facilisis in, egestas eget quam.</p>
        </div>
        <div class="col"><img id="im1" src="https://cdn.pixabay.com/photo/2015/04/10/17/03/pots-716579_960_720.jpg" style="align-content:center;" /></div>
    </div>
</div>



<div class="container">
    <div class="row">
        <div class="column">
            <p class="label">I'm looking for</p>
            <th><RadzenDropDown Data="@TypeOfPropertyOptions" TValue="string" @bind-Value="@TypeOfPropertyUserChoice" /></th>
        </div>
        <div class="column">
            <p class="label">I'm a first home buyer</p>
            <th><RadzenDropDown Data="@FirstHomeBuyerOptions" TValue="string" @bind-Value="@FirstHomeBuyerUserChoice" /></th>
        </div>
        <div class="column">
            <p class="label"> In</p>
            <th><RadzenDropDown Data="@PropertyLocationOptions" TValue="string" @bind-Value="@PropertyLocationUserChoice" /></th>
        </div>
    </div>
    <div class="row">
        <div class="column">
            <p class="label">For</p>
            <th><RadzenDropDown Data="@PropertyUseOptions" TValue="string" @bind-Value="@PropertyUseUserChoice" /></th>
        </div>
        <div class="column">
            <p class="label">I have savings of</p>
            <th> $ <RadzenNumeric @bind-Value="Savings" /></th>
        </div>
        <div class="column">
            <p class="label">For a property worth</p>
            <th> $ <RadzenNumeric @bind-Value="PriceOfProperty" /></th>
        </div>
    </div>
    <div class="button-row" style="margin-top:15px;">
        <button id="calculate" class="block" @onclick="Calculate">Calculate</button>
    </div>
</div>

<div class="jumbotron" id="banner1" style="background: rgb(44,44,44);">
    <div class="row">
        <div class="col-8">
            <h2 style="color: rgb(255,255,255);">Your estimated upfront costs <br>@DepositOutput</h2>
        </div>
        <div class="col">
            <h3 style="color: rgb(255,255,255);">After covering your upfront costs, You would have @DepositOutput savings remaining for a deposit.</h3>
            <button type="reset" class="btn btn-light" style="width:300px;text-align:center;">Start Over</button>
        </div>
    </div>
</div>




<div class="accordion" id="accordionExample">
    <div class="card">
        <div class="card-header" id="headingOne">
            <h2 class="mb-0">
                <button class="btn btn-link" type="button" data-toggle="collapse" data-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Government fees
                </button>
            </h2>
        </div>

        <div id="collapseOne" class="collapse show" aria-labelledby="headingOne" data-parent="#accordionExample" style="padding:40px;">
            <div class="table-responsive">
                <table class="table">
                    <tbody>
                        <tr>
                            <td style="width: 823px;">Property Stamp Duty</td>
                            <td>@StampDutyOnPropertyOutput</td>
                        </tr>
                        <tr>
                            <td>Registration of mortgage</td>
                            <td>@MortgageRegistrationFeeOutput</td>
                        </tr>
                        <tr>
                            <td>Registration of discharge of mortgage</td>
                            <td>@MortgageDischargeFeeOutput</td>
                        </tr>
                        <tr>
                            <td>Registration of transfer</td>
                            <td>@TransferFeeOutput</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingTwo">
            <h2 class="mb-0">
                <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Conveyancing fees
                </button>
            </h2>
        </div>
        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordionExample" style="padding:40px;">
            <div class="table-responsive">
                <table class="table">
                    <tbody>
                        <tr>
                            <td style="width: 823px;">Conveyancing</td>
                            <td><RadzenNumeric @bind-Value="Conveyancing" /></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingThree">
            <h2 class="mb-0">
                <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                    Bank Fees
                </button>
            </h2>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample" style="padding:40px;">
            <table class="table">
                <tbody>
                    <tr>
                        <td style="width: 823px;">Bank Settlement Fees</td>
                        <td>@BankSettlementFeeOutput</td>
                    </tr>
                    <tr>
                        <td style="width: 823px;">Loan establishment fee</td>
                        <td>@LoanEstablishmentFeeOutput</td>
                    </tr>
                    <tr>
                        <td>LMI</td>
                        <td>@LMIOutput</td>
                    </tr>
                    <tr>
                        <td>BFG Fees</td>
                        <td>$$$</td>
                    </tr>
                    <tr>
                        <td>Application fee</td>
                        <td><RadzenDropDown Data="@ApplicationFee" @bind-Value="@ApplicationFeeUserChoice" /></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
    <div class="card">
        <div class="card-header" id="headingfour">
            <h2 class="mb-0">
                <button class="btn btn-link collapsed" type="button" data-toggle="collapse" data-target="#collapseThree" aria-expanded="false" aria-controls="collapseThree">
                    Other
                </button>
            </h2>
        </div>
        <div id="collapseThree" class="collapse" aria-labelledby="headingThree" data-parent="#accordionExample" style="padding:40px;">
            <table class="table">
                <tbody>
                    <tr>
                        <td>Moving fee:</td>
                        <td><RadzenNumeric @bind-Value="MovingFee" /></td>
                    </tr>
                    <tr>
                        <td>Pest inspection:</td>
                        <td><RadzenNumeric @bind-Value="PestInspection" /></td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>




@code {
    void Change(object value, string name, string action)
    {
        //console.Log($"{name} item with index {value} {action}");
    }
    private List<string> TypeOfPropertyOptions = new List<string>
    {
            "Newly built dwelling",
            "Existing property",
            "Vacant land"
    };
    private string TypeOfPropertyUserChoice { get; set; }

    private List<string> FirstHomeBuyerOptions = new List<string>
    {
            "No",
            "Yes"
    };
    private string FirstHomeBuyerUserChoice { get; set; }

    private List<string> PropertyLocationOptions = new List<string>
    {
            "ACT",
            "NSW",
            "NT",
            "QLD",
            "SA",
            "TAS",
            "VIC",
            "WA"
    };
    private string PropertyLocationUserChoice { get; set; }

    private List<string> PropertyUseOptions = new List<string>
    {
            "Live-in",
            "Investment"
    };
    private string PropertyUseUserChoice { get; set; }

    private double PriceOfProperty { get; set; }
    private double Savings { get; set; }
    private double Deposit { get; set; }
    private double TotalUpfrontCosts { get; set; }

    // Governemnt fees.
    private double StampDutyOnProperty { get; set; }
    private double MortgageRegistrationFee { get; set; } = 146;
    private double MortgageDischargeFee { get; set; } = 146;
    private double TransferFee { get; set; } = 147;

    // Conveyancing fees.
    private double Conveyancing { get; set; } = 1500;

    // Bank fees.
    private double LMI { get; set; }
    private double BankSettlementFee { get; set; } = 200; // For CBA.
    private double LoanEstablishmentFee { get; set; } = 600; // For CBA.

    // BFG fees.
    private double LoanSettlementFee { get; set; } = 285; // This is an indicative only. Discuss with Sam to get the accurate fee.
    private List<double> ApplicationFee = new List<double>
{
            0,
            525 // This is an indicative only. Discuss with Sam to get the accurate fee.
    };
    private double ApplicationFeeUserChoice { get; set; }

    // Other costs.
    private double MovingFee { get; set; }
    private double PestInspection { get; set; }

    // Output string.
    private string DepositOutput { get; set; }

    // Government fees.
    private string StampDutyOnPropertyOutput { get; set; }
    private string MortgageRegistrationFeeOutput { get; set; }
    private string MortgageDischargeFeeOutput { get; set; }
    private string TransferFeeOutput { get; set; }

    // Conveyancing fees.
    private string ConveyancingOutput { get; set; }

    // Bank fees.
    private string LMIOutput { get; set; }
    private string BankSettlementFeeOutput { get; set; }
    private string LoanEstablishmentFeeOutput { get; set; }

    // BFG fees.
    private string LoanSettlementFeeOutput { get; set; }

    // Total upfront costs.
    private string TotalUpfrontCostsOutput { get; set; }

    private CalculateStampDuty stampDutyCalculator = new CalculateStampDuty();

    private void Calculate()
    {
        // Government fees.
        StampDutyOnProperty = stampDutyCalculator.Calculate(FirstHomeBuyerUserChoice, PropertyLocationUserChoice, TypeOfPropertyUserChoice, PriceOfProperty, StampDutyOnProperty);
        StampDutyOnPropertyOutput = StampDutyOnProperty.ToString("C");
        MortgageRegistrationFeeOutput = MortgageDischargeFee.ToString("C");
        MortgageDischargeFeeOutput = MortgageDischargeFee.ToString("C");
        TransferFeeOutput = TransferFee.ToString("C");

        // Bank fees.
        LMIOutput = LMI.ToString("C");
        BankSettlementFeeOutput = BankSettlementFee.ToString("C");
        LoanEstablishmentFeeOutput = LoanEstablishmentFee.ToString("C");

        // BFG fees.
        LoanSettlementFeeOutput = LoanSettlementFee.ToString("C");

        // Total fees.
        TotalUpfrontCosts = (StampDutyOnProperty + MortgageRegistrationFee + MortgageDischargeFee + TransferFee) +
                        (Conveyancing) + (LMI + BankSettlementFee + LoanEstablishmentFee) +
                        (LoanSettlementFee + ApplicationFeeUserChoice) + (MovingFee + PestInspection);
        TotalUpfrontCostsOutput = TotalUpfrontCosts.ToString("C");

        // Amount left for deposit.
        Deposit = Savings - TotalUpfrontCosts;
        DepositOutput = Deposit.ToString("C");
    }
}

    @*// References
    // https://www.commbank.com.au/digital/home-buying/calculator/totalcost.
    // https://www.homeloanexperts.com.au/mortgage-calculators/property-purchase-costs-calculator/.
    // https://www.rams.com.au/calculators-and-resources/calculator-upfront-and-ongoing-costs/. }*@
